@model Projeto.Models.reserva

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Salvar", "reservas", FormMethod.Post, new { id = "form-reserva", role = "form", @autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal container" style="padding: 0 3rem;">
    <br />
    <h4>Faça sua reserva do imóvel:</h4>
    <hr />

    <div class="p-4 pb-0">
        <h5 class="text-primary mb-3">@ViewBag.NomeImovel, Diária: R$@ViewBag.ValorDiaria</h5>
        <p><i class="fa fa-map-marker-alt text-primary me-2"></i>@ViewBag.Cidade - @ViewBag.Estado</p>
    </div>

    @Html.Hidden("IdImovel")
    @Html.Hidden("ValorDiaria")
    <div class="form-group row mt-5">
        <div class="col-md-3">
            <label class="form-label">Data inicial</label>
            @Html.TextBoxFor(model => model.DataInicial, new { @class = "form-control date datepicker", required = "required", type = "date" })
        </div>

        <div class="col-md-3">
            <label class="form-label">Data final</label>
            @Html.TextBoxFor(model => model.DataFinal, new { @class = "form-control date datepicker", required = "required", type = "date" })
        </div>

        <div class="col-md-3">
            <label class="form-label">Total de Diárias</label>
            @Html.TextBox("TotalDiarias", 0, new { @class = "form-control", @readonly="readonly" })
        </div>

        <div class="col-md-3">
            <label class="form-label">Valor total da estadia</label>
            @Html.TextBoxFor(model => model.ValorTotal, new { @class = "form-control decimal", @readonly = "readonly" })
        </div>

    </div>

    <div class="form-group row text-center mt-5">
        <h4 class="invalid-feedback" id="avisar-data"></h4>
    </div>

    <div class="form-group row text-center mt-5">
        <div class="col-md-offset-2 col-md-12">
            <button type="submit" class="btn btn-primary btn-block salvar">Reservar</button>
            <button onclick="history.back()" class="btn btn-secondary btn-block">Voltar</button>
        </div>
    </div>

</div>
}

@section Scripts{

    <script src="~/Content/js/jquery.mask.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js" integrity="sha512-cViKBZswH231Ui53apFnPzem4pvG8mlCDrSyZskDE9OK2gyUd/L08e1AC0wjJodXYZ1wmXEuNimN1d3MWG7jaQ==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.9.2/i18n/jquery-ui-i18n.min.js" integrity="sha512-3RBB8DFGvkwstHNuKlurNsKeVs7grKO/y8bsEcbEYEvaL3rTFdbCmNB3ezQmlOEYu5DzVshSAxYid6Cz2R7chg==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.9.2/i18n/jquery.ui.datepicker-pt-BR.min.js" integrity="sha512-pxqrJXzEDsWH/LY1r1kD9KEdQjW0D7hBndZ/OGYv1LXDQyAK2C2wed0JxUeD4vUiEerNIhSO2PXnj5+EeffBPA==" crossorigin="anonymous"></script>

    <script>

        $(document).ready(function () {

            $("#IdImovel").val(@ViewBag.Imovel)
            $("#ValorDiaria").val(@ViewBag.ValorDiaria)

            formatInputs()
        });


        function formatInputs() {

            //$(".date").mask("00/00/0000");
            $('.decimal').mask("#.##0,00", { reverse: true });
        }

        // Muda layout da linha de evento ao mudar o tipo
        $(document).on('keyup change', `[name$="DataInicial"], [name$="DataFinal"] `, function (e, flag_propagated) {
            e.stopPropagation()

            if (!flag_propagated) {

                var dataIniArr = $(`[name$="DataInicial"]`).val().split("/")
                var dataFimArr = $(`[name$="DataFinal"]`).val().split("/")
                var calc = Math.floor((new Date(`${dataFimArr[2]}-${dataFimArr[1]}-${dataFimArr[0]}`).getTime()) - (new Date(`${dataIniArr[2]}-${dataIniArr[1]}-${dataIniArr[0]}`).getTime()) + 1);
                var result = Math.ceil(calc / (1000 * 60 * 60 * 24));

                if (result > 0 && result != undefined) {
                    $(`[name$="TotalDiarias"]`).val(result)

                    var valor = result * $("#ValorDiaria").val()

                    var total = (valor != null) ? new Intl.NumberFormat('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(valor) : ""

                    $("#ValorTotal").val(total)

                } else {
                    $(`[name$="TotalDiarias"]`).val(0)
                }

            }

            VerificaDisponibilidade($("#IdImovel").val(), $("#DataInicial").val(), $("#DataFinal").val() );
        });

        function VerificaDisponibilidade(idimovel, datainicio, datafim) {

            $('#avisar-data').show();
            $('#avisar-data').text('Verificando agenda...');
            $.ajax({
                url: '@Url.Action("VerificarAgenda", "reservas")',
                data: { datainicio: datainicio, datafim: datafim, idImovel: idimovel },
                method: 'post',
                success: function (data) {
                    console.log("data: " + data);
                    if (data) {
                        $('#avisar-data').show();
                        $('#avisar-data').text('Data Indisponível.');
                        $(".salvar").attr("disabled", true);
                    }
                    else {
                        $('#avisar-data').hide();
                        $('#avisar-data').text('');
                        $(".salvar").attr("disabled", false);
                    }
                },
                error: function () {
                    $('#avisar-data').text('Informe a data fim.');
                }
            });
        }

    </script>


}
